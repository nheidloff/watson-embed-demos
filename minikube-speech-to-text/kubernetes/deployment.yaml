apiVersion: apps/v1
kind: Deployment
metadata:
  name: ibm-watson-stt-embed
  labels:
    app.kubernetes.io/name: "ibm-watson-stt-embed"
    app.kubernetes.io/component: "runtime"
    app.kubernetes.io/instance: "example"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "ibm-watson-stt-embed"
      app.kubernetes.io/component: "runtime"
      app.kubernetes.io/instance: "example"
  progressDeadlineSeconds: 1800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "ibm-watson-stt-embed"
        app.kubernetes.io/component: "runtime"
        app.kubernetes.io/instance: "example"
    spec:
      imagePullSecrets:
      - name: ibm-entitlement-key
      initContainers:
      - name: watson-stt-generic-models
        image: cp.icr.io/cp/ai/watson-stt-generic-models:1.0.0
        args:
        - cp
        - catalog.json
        - /opt/ibm/chuck.x86_64/var
        env:
        - name: ACCEPT_LICENSE
          value: "true"
        resources:
          limits:
            cpu: 1
            ephemeral-storage: 1Gi
            memory: 1Gi
          requests:
            cpu: 100m
            ephemeral-storage: 1Gi
            memory: 256Mi
        volumeMounts:
        - name: chuck-var
          mountPath: /opt/ibm/chuck.x86_64/var

      - name: watson-stt-en-us-multimedia
        image: cp.icr.io/cp/ai/watson-stt-en-us-multimedia:1.0.0
        args:
        - sh
        - -c
        - cp model/* /models/pool2
        env:
        - name: ACCEPT_LICENSE
          value: "true"
        resources:
          limits:
            cpu: 1
            ephemeral-storage: 1Gi
            memory: 1Gi
          requests:
            cpu: 100m
            ephemeral-storage: 1Gi
            memory: 256Mi
        volumeMounts:
        - name: models
          mountPath: /models/pool2

      - name: watson-stt-en-us-telephony
        image: cp.icr.io/cp/ai/watson-stt-en-us-telephony:1.0.0
        args:
        - sh
        - -c
        - cp model/* /models/pool2
        env:
        - name: ACCEPT_LICENSE
          value: "true"
        resources:
          limits:
            cpu: 1
            ephemeral-storage: 1Gi
            memory: 1Gi
          requests:
            cpu: 100m
            ephemeral-storage: 1Gi
            memory: 256Mi
        volumeMounts:
        - name: models
          mountPath: /models/pool2

      - name: prepare-models
        image: cp.icr.io/cp/ai/watson-stt-runtime:1.0.0
        args:
        - bash
        - /prepareModels.sh
        env:
        - name: ACCEPT_LICENSE
          value: "true"
        resources:
          limits:
            cpu: 4
            ephemeral-storage: 1Gi
            memory: 4Gi
          requests:
            cpu: 1
            ephemeral-storage: 1Gi
            memory: 4Gi
        volumeMounts:
        - name: chuck-var
          mountPath: /opt/ibm/chuck.x86_64/var
        - name: chuck-logs
          mountPath: /opt/ibm/chuck.x86_64/logs
        - name: tmp
          mountPath: /tmp
        - name: models
          mountPath: /models/pool2
        - name: config
          subPath: prepareModels.sh
          mountPath: "/prepareModels.sh"
        - name: config
          mountPath: /opt/ibm/chuck.x86_64/var/env_config.json
          subPath: env_config.json

      containers:
      - name: runtime
        image: cp.icr.io/cp/ai/watson-stt-runtime:1.0.0
        resources:
          limits:
            cpu: 4
            ephemeral-storage: 1Gi
            memory: 4Gi
          requests:
            cpu: 1
            ephemeral-storage: 1Gi
            memory: 4Gi
        env:
        - name: ACCEPT_LICENSE
          value: "true"
        - name: KUBERNETES_RESOURCE_CPUS
          valueFrom:
            resourceFieldRef:
              containerName: runtime
              resource: requests.cpu
        - name: KUBERNETES_RESOURCE_MEM
          valueFrom:
            resourceFieldRef:
              containerName: runtime
              resource: requests.memory
        ports:
        - containerPort: 1080
        startupProbe:
          tcpSocket:
            port: 1080
          failureThreshold: 12
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /v1/miniHealthCheck
            port: 1080
          periodSeconds: 10
          timeoutSeconds: 1
        livenessProbe:
          tcpSocket:
            port: 1080
          periodSeconds: 30
        volumeMounts:
        - mountPath: /opt/ibm/chuck.x86_64/var
          name: chuck-var
        - mountPath: /opt/ibm/chuck.x86_64/logs
          name: chuck-logs
        - name: tmp
          mountPath: /tmp
        - mountPath: /opt/ibm/chuck.x86_64/var/env_config.json
          name: config
          subPath: env_config.json
        - mountPath: /opt/ibm/chuck.x86_64/var/sessionPools.yaml
          name: config
          subPath: sessionPools.yaml
        - mountPath: /opt/ibm/chuck.x86_64/var/sessionPools.py
          name: config
          subPath: sessionPools.py
        - mountPath: /opt/ibm/chuck.x86_64/var/resourceRequirements.py
          name: config
          subPath: resourceRequirements.py
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sleep
              - "15"

      volumes:
        - name: chuck-var
          emptyDir: {}
        - name: chuck-cache
          emptyDir: {}
        - name: chuck-logs
          emptyDir: {}
        - name: models
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: ibm-watson-stt-embed
